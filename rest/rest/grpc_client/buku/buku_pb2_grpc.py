# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import rest.grpc_client.buku.buku_pb2 as buku__pb2

# import rest.grpc_client.buku.buku_pb2 as buku_pb2


class BukuServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_unary(
            "/buku.BukuService/List",
            request_serializer=buku__pb2.BukuListRequest.SerializeToString,
            response_deserializer=buku__pb2.BukuListResponse.FromString,
        )
        self.Detail = channel.unary_unary(
            "/buku.BukuService/Detail",
            request_serializer=buku__pb2.BukuDetailRequest.SerializeToString,
            response_deserializer=buku__pb2.BukuDetailResponse.FromString,
        )
        self.Create = channel.unary_unary(
            "/buku.BukuService/Create",
            request_serializer=buku__pb2.BukuCreateRequest.SerializeToString,
            response_deserializer=buku__pb2.BukuCreateResponse.FromString,
        )
        self.Update = channel.unary_unary(
            "/buku.BukuService/Update",
            request_serializer=buku__pb2.BukuUpdateRequest.SerializeToString,
            response_deserializer=buku__pb2.BukuUpdateResponse.FromString,
        )
        self.Delete = channel.unary_unary(
            "/buku.BukuService/Delete",
            request_serializer=buku__pb2.BukuDeleteRequest.SerializeToString,
            response_deserializer=buku__pb2.BukuDeleteResponse.FromString,
        )


class BukuServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Detail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_BukuServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "List": grpc.unary_unary_rpc_method_handler(
            servicer.List,
            request_deserializer=buku__pb2.BukuListRequest.FromString,
            response_serializer=buku__pb2.BukuListResponse.SerializeToString,
        ),
        "Detail": grpc.unary_unary_rpc_method_handler(
            servicer.Detail,
            request_deserializer=buku__pb2.BukuDetailRequest.FromString,
            response_serializer=buku__pb2.BukuDetailResponse.SerializeToString,
        ),
        "Create": grpc.unary_unary_rpc_method_handler(
            servicer.Create,
            request_deserializer=buku__pb2.BukuCreateRequest.FromString,
            response_serializer=buku__pb2.BukuCreateResponse.SerializeToString,
        ),
        "Update": grpc.unary_unary_rpc_method_handler(
            servicer.Update,
            request_deserializer=buku__pb2.BukuUpdateRequest.FromString,
            response_serializer=buku__pb2.BukuUpdateResponse.SerializeToString,
        ),
        "Delete": grpc.unary_unary_rpc_method_handler(
            servicer.Delete,
            request_deserializer=buku__pb2.BukuDeleteRequest.FromString,
            response_serializer=buku__pb2.BukuDeleteResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "buku.BukuService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class BukuService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def List(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/buku.BukuService/List",
            buku__pb2.BukuListRequest.SerializeToString,
            buku__pb2.BukuListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Detail(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/buku.BukuService/Detail",
            buku__pb2.BukuDetailRequest.SerializeToString,
            buku__pb2.BukuDetailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Create(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/buku.BukuService/Create",
            buku__pb2.BukuCreateRequest.SerializeToString,
            buku__pb2.BukuCreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Update(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/buku.BukuService/Update",
            buku__pb2.BukuUpdateRequest.SerializeToString,
            buku__pb2.BukuUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Delete(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/buku.BukuService/Delete",
            buku__pb2.BukuDeleteRequest.SerializeToString,
            buku__pb2.BukuDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
